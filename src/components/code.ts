export const code = "<figure class=\"frame not-content\"><figcaption class=\"header\"></figcaption><pre data-language=\"hylo\"><code><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#CB7676;--1:#9E5252\">fun</span><span style=\"--0:#DBD7CAEE;--1:#393A34\"> </span><span style=\"--0:#80A665;--1:#4B7231\">concurrent_greeting</span><span style=\"--0:#DBD7CAEE;--1:#393A34\">() -&gt; Int {</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#55987B;--1:#1E754F\">var</span><span style=\"--0:#DBD7CAEE;--1:#393A34\"> future = spawn_(</span><span style=\"--0:#55987B;--1:#1E754F\">fun</span><span style=\"--0:#DBD7CAEE;--1:#393A34\">() { do_greet() })</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#55987B;--1:#1E754F\">let</span><span style=\"--0:#DBD7CAEE;--1:#393A34\"> x = prime_number()</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#DBD7CAEE;--1:#393A34\">  </span></span><span style=\"--0:#DBD7CAEE;--1:#393A34\">print(</span><span style=\"--0:#C98A7D;--1:#96574A\">\"Main threads says: hello!\"</span><span style=\"--0:#DBD7CAEE;--1:#393A34\">)</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#DBD7CAEE;--1:#393A34\">  </span></span><span style=\"--0:#DBD7CAEE;--1:#393A34\">print(</span><span style=\"--0:#C98A7D;--1:#96574A\">\"# before await\"</span><span style=\"--0:#DBD7CAEE;--1:#393A34\">)</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#55987B;--1:#1E754F\">let</span><span style=\"--0:#DBD7CAEE;--1:#393A34\"> y = future.await() </span><span style=\"--0:#818F81FE;--1:#636B63\">// switching threads</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\"><span style=\"--0:#DBD7CAEE;--1:#393A34\">  </span></span><span style=\"--0:#DBD7CAEE;--1:#393A34\">print(</span><span style=\"--0:#C98A7D;--1:#96574A\">\"# after await\"</span><span style=\"--0:#DBD7CAEE;--1:#393A34\">)</span></div></div><div class=\"ec-line\"><div class=\"code\"><span class=\"indent\">  </span><span style=\"--0:#55987B;--1:#1E754F\">return</span><span style=\"--0:#DBD7CAEE;--1:#393A34\"> x + y</span></div></div><div class=\"ec-line\"><div class=\"code\"><span style=\"--0:#DBD7CAEE;--1:#393A34\">}</span></div></div></code></pre><div class=\"copy\"><button title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"fun concurrent_greeting() -&gt; Int {  var future = spawn_(fun() { do_greet() })  let x = prime_number()  print(&quot;Main threads says: hello!&quot;)  print(&quot;# before await&quot;)  let y = future.await() // switching threads  print(&quot;# after await&quot;)  return x + y}\"><div></div></button></div></figure>"